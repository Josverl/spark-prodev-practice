trigger:
  branches:
    include: [main]
  paths:
    include:
      - solutions/admin/*

stages:
  - stage: build
    jobs:
      - job: build_admin_Plugins
        displayName: Build admin Plugins
        pool:
          vmImage: windows-latest
        steps:
          - task: NuGetCommand@2
            displayName: Restore NuGet packages
            inputs:
              restoreSolution: solutions/admin/Plugins/Plugins.sln
          - task: VSBuild@1
            displayName: Build solution
            inputs:
              solution: solutions/admin/Plugins/Plugins.sln
              configuration: Release
          - publish: solutions/admin/Plugins/bin/Release/Cr90c73.Admin.Plugins.dll
            artifact: admin_Plugins
      - job: build_admin
        dependsOn: build_admin_Plugins
        displayName: Build admin
        pool:
          vmImage: ubuntu-latest
        steps:
          - download: current
            artifact: admin_Plugins
          # Build PCF
          # Transpile / bundle TS/JS
          - pwsh: |
              ./pwsh/Compress-Solution.ps1 `
                -Name admin
            displayName: Pack Solution
            env:
              PLUGINS_DIR: $(Pipeline.Workspace)/admin_Plugins
          - publish: $(Build.ArtifactStagingDirectory)
            artifact: solution-artifact
      - job: pack_pwsh
        displayName: Pack pwsh
        pool:
          vmImage: ubuntu-latest
        steps:
          - publish: pwsh
            artifact: pwsh
  - stage: Prod
    dependsOn: build
    jobs:
      - deployment: Deploy_PowerPlatform_Solutions
        displayName: Deploy Power Platform Solution(s)
        pool:
          vmImage: ubuntu-latest
        environment: Prod
        variables:
          - group: Credentials
          - group: Prod
        strategy:
          runOnce:
            deploy:
              steps:
                - pwsh: |
                    $(Pipeline.Workspace)/pwsh/Import-Solution.ps1 `
                      -Name admin `
                      -Url $(Url) `
                      -ClientId $(ClientId) `
                      -ClientSecret $(ClientSecret) `
                      -TenantId $(TenantId)
                  displayName: Import admin
